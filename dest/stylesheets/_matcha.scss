@import "compass";

// Font
$font_family: "Open Sans", "Helvetica Neue", Helvetica, Arial, Sans-serif;
$font_family-hei: "Microsoft Yahei", "Hiragino Sans GB", Tahoma, Verdana, "BitStream vera Sans", Arial, Helvetica, Sans-serif;
$font_family-monospace: Monaco, Consolas, "Lucida Console", monospace;
$font_size: 100%;
$line_height: 1.5;

// Text
$color-title: #444;
$color-text: #333;
$color-text-medium: #666;
$color-text-light: #888;
$color-link: #3F6D77;
$color-link-hover: #518C99;

// Border
$border_color: #B8C4C8;

// Unicode
$UN-bullet: "\2022";
$UN-middle_dot: "\00B7";
$UN-wavy_overline: "\FE4B";
$UN-wavy_low_line: "\FE4F";

// Avatar
$avatar-tiny: 30px;
$avatar-small: 48px;
$avatar-normal: 60px;
$avatar-large: 120px;

@function percent( $divisor, $dividend ) {
  @return $divisor / $dividend * 100%;
}

// CSS3

@mixin keyframes( $name ) {
  @-webkit-keyframes #{$name} {
    @content;
  }

  @-moz-keyframes #{$name} {
    @content;
  }

  @-ms-keyframes #{$name} {
    @content;
  }

  @-o-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

@mixin animation( $args... ) {
  @include experimental(animation, $args);
}

@mixin user-select( $args ) {
  @include experimental(user-select, $args);
}

@mixin image-set( $args... ) {
  background-image: -webkit-image-set($args);
  background-image: image-set($args);
}



// Enhancement

@mixin linear-gradient( $from, $to ) {
  @include filter-gradient($from, $to);
  @include background-image(linear-gradient($from, $to));
}

@mixin supports( $prop_name, $prop_val ) {
  @supports ($prop_name: $prop_val) or
            (-o-#{$prop_name}: $prop_val) or
            (-ms-#{$prop_name}: $prop_val) or
            (-moz-#{$prop_name}: $prop_val) or
            (-webkit-#{$prop_name}: $prop_val) {
    @content;
  }
}



// Overwrite

@mixin opacity( $opacity ) {
  opacity: $opacity;
}

@mixin base-font( $font_size: $font_size ) {
  font: {
    style: normal;
    weight: normal;
    family: $font_family;
    size: $font_size;
  }

  line-height: $line_height;
}

@mixin text-ellipsis {
  white-space: nowrap;
  overflow-x: hidden;
  text-overflow: ellipsis;
}

@mixin text-hide {
  color: transparent;
  border: 0 none;
  font: 0px/0 a;
  @include text-shadow(none);
}

// Makes text's vertical alignment middle,
// should invoked on parent node.
@mixin text-middle {
  &:before {
    content: "\0020";
    @include inline-block;
    width: 0;
    height: 100%;
  }
}

@mixin line_feed {
  word-wrap: break-word;
  word-wrap: normal\0;
  word-break: break-all;
  white-space: normal;
}

@mixin punc_under {
  position: relative;
  text-indent: 0;

  &:after {
    position: absolute;
    top: 100%;
    left: 0;
    line-height: 1;
  }
}

@mixin square( $size: 16px ) {
  width: $size;
  height: $size;
}

@mixin circle( $size: 16px ) {
  @include square($size);
  @include border-radius(50%);
}

@mixin triangle( $width: 5px, $color: #000, $dir: top ) {
  @include inline-block(none);
  @include text-hide;
  width: 0 !important;
  height: 0 !important;
  border: $width solid transparent;
  border-#{$dir}-color: $color;
}

@mixin card_style {
  border: 1px solid #E0E0E0;
  border-bottom-width: 2px;
  @include border-radius(2px);
}

@mixin no_item {
  list-style: none outside none;
}

@mixin tag_unit {
  @include inline-block(none);
  max-width: 120px;
  margin-right: 5px; padding: 0 8px;
  @include border-radius(2px);
  background-color: #DCE4E6;
  color: $color-text-medium !important;
  text-decoration: none !important;
  @include text-ellipsis;
}

@mixin no_gap {
  margin: 0;
  padding: 0;
}

// refer to http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix {
  &:before,
  &:after {
    content: "\0020";
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin block_content {
  padding: .75em;
  border: 1px solid #C5CACE;
  @include border-radius(2px);
  @include box-shadow(0 1px 5px rgba(0, 0, 0, 0.1) inset, 0 1px 0 #FFF);
  background-color: #FEFEFE;
}

@mixin covered_background {
  background: {
    repeat: no-repeat;
    position: 50% 50%;
    size: cover;
  }
}

// 渐变按钮
@mixin gradient_button( $bg_color, $normal_start, $normal_end, $hover_start, $hover_end ) {
  background-color: $bg_color;
  @include linear-gradient($normal_start, $normal_end);

  &:hover {
    @include linear-gradient($hover_start, $hover_end);
  }

  &:active {
    @include linear-gradient($hover_end, $hover_start);
  }
}

@mixin dropdown-element( $target: "& > ul, & > ol", $alignment: left ) {
  position: relative;

  &:hover {
    #{$target} {
      display: block;
    }
  }

  #{$target} {
    display: none;
    position: absolute;
    top: 100%;
    
    @if $alignment == "right" {
      right: 0;
    }
    @else {
      left: 0;
    }
  }
}

@mixin special-list {
  @include no_item;
  @include no_gap;
}

// Sandwich
// ==========
// An instance of Sticky Footer

@mixin layout-sandwich(
    $layout-header-height: auto,
    $layout-footer-height: auto
  ) {

  html[data-layout="sandwich"],
  html[data-layout="sandwich"] body {
    height: 100%;
  }

  html[data-layout="sandwich"] {
    // Header of page
    // <header class="layout-header"></header>
    @if $layout-header-height != auto {
      .layout-header {
        height: $layout-header-height;
        margin-bottom: -$layout-header-height;
      }
    }

    // Footer of page
    // <footer class="layout-footer"></footer>
    @if $layout-footer-height != auto {
      .layout-footer {
        height: $layout-footer-height;
        margin-top: -$layout-footer-height;
      }
    }

    // Main area of page
    // <main class="layout-container"></main>
    .layout-container {
      min-height: 100%;

      &:before,
      &:after {
        content: "\0020";
        display: block;
        position: relative;
        z-index: -999999999;
        background: transparent none;
        visibility: hidden;
      }

      // Placeholder of page's header
      &:before {
        height: $layout-header-height;
      }

      // Placeholder of page's footer
      &:after {
        height: $layout-footer-height;
      }
    }
  }
}



// Frameset

@mixin layout-frameset(
    $sidebar-width: auto,
    $sidebar-pos: left,
    $layout-header-height: 0,
    $layout-footer-height: 0
  ) {

  html[data-layout="frameset"],
  html[data-layout="frameset"] body {
    @include square(100%);
    min-height: 0;
    zoom: 1;
  }

  html[data-layout="frameset"] {
    @include box-sizing(border-box);
    padding: {
      top: $layout-header-height;
      bottom: $layout-footer-height;
    }
    overflow-y: hidden;

    .layout-header {
      height: $layout-header-height;
      margin-top: -($layout-header-height);
    }

    .layout-footer {
      height: $layout-footer-height;
      margin-bottom: -($layout-footer-height);
    }

    .layout-main,
    .layout-sub {
      height: 100%;
      overflow: auto;
    }

    .layout-sub {
      width: $sidebar-width;
      float: $sidebar-pos;
    }
  }
}

@mixin _aspect-ratio( $w, $h ) {
  padding-top: 100% * $h / $w;
}

body {
  color: $color-text;
  background-color: #F7F7F7;
}

input,
button,
textarea {
  color: $color-text-medium;
  background-color: #FFF;
}

input[type="radio"],
input[type="checkbox"] {
  background-color: transparent;
}

label {
  cursor: pointer;
}

img {
  max-width: 100%;
}

p {
  line-height: 1.8;
  margin: .5em 0;
  padding: .25em 0;
}

code,
pre {
  font-family: $font_family-monospace;
}

pre,
pre code {
  white-space: pre-wrap;
  word-wrap: break-word;
}

pre {
  padding: .75em;
  border: 1px solid $border_color;
  @include border-radius(2px);
  color: $color-text-medium;
}

html[lang^="en"] {
  tbody th {
    text-transform: uppercase;
  }
}

// Covered Background Image

.u-coveredBg {
  @include covered_background;
}



// Keep the aspect ratio

.u-aspectRatio {
  position: relative;
  overflow: hidden;

  &:before {
    content: "\0020";
    display: block;
  }

  & > * {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

  & > img {
    max-width: 100%;
    margin: auto;
  }
}

.u-aspectRatio--2to1:before {
  @include _aspect-ratio(2, 1);
}

.u-aspectRatio--3to2:before {
  @include _aspect-ratio(3, 2);
}



.u-fillUp {
  @include square(100%);
}

.Typo-em,
.Typo-gu--wavy {
  @include punc_under;
}

span.Typo-em,
span.Typo-gu--wavy {
  @include inline-block(none);
}

//====================
// Emphasis
//====================

.Typo-em:after {
  content: $UN-bullet;
  margin-top: -.67em;
  width: 100%;
  text-align: center;
}

@supports (text-emphasis-style: dot) or
          (-moz-text-emphasis-style: dot) or
          (-webkit-text-emphasis-style: dot) {
  .Typo-em {
    @include experimental(text-emphasis-style, dot);
    @include experimental(text-emphasis-position, under);

    &:after {
      display: none;
    }
  }
}

//====================
// Guillemet (Wavy)
//====================

.Typo-gu--wavy:after {
  content: $UN-wavy_low_line;
  top: auto;
  bottom: 0;
}

@supports (text-decoration-style: wavy) or
          (-moz-text-decoration-style: wavy) or
          (-webkit-text-decoration-style: wavy) {
  .Typo-gu--wavy {
    @include experimental(text-decoration-style, wavy);
    @include experimental(text-decoration-line, underline);

    &:after {
      display: none;
    }
  }
}

// Buttons

.Button,
.Button--info,
.Button--warning {
  @include inline-block(top);
  @include user-select(none);
  padding: 4px 10px;
  border: 1px solid transparent;
  @include border-radius(2px);
  cursor: pointer;
  // For links
  text-decoration: none !important;

  &[disabled] {
    border-color: #B8C4C8 !important;
    background: #D8DEE0 none !important;
    filter: none !important;
    color: #A2ABAE !important;
    cursor: default;
  }
}

.Button {
  color: #888;
  border-color: #CBCBCB;
  @include gradient_button(#EBEBEB, #F8F8F8, #EBEBEB, #F9F9F9, #F2F2F2);
}

.Button--info {
  color: #FFF;
  border-color: #4BAECC;
  @include gradient_button(#3DCCF6, #5DC3E2, #4DBBDC, #6FCDE9, #60C5E3);
}

.Button--warning {
  color: #FFF;
  border-color: #EC6B3F;
  @include gradient_button(#FB784B, #FE855B, #FB784B, #FF936E, #FB865E);
}

// Drop-down List



.DropList,
.DropDown--upon,
.DropDown--upon .DropDown-list {
  position: relative;
}

.DropList,
.DropDown--upon {
  @include inline-block(none);
}



.DropList {
  min-width: 120px;
  border: 1px solid #A6A6A6;
  border-radius: 3px;
  background-color: #FFF;

  @include dropdown-element(".DropList-dropdown", left);

  &:hover {
    border-radius: 3px 3px 0 0;
  }

  .DropList-selected {
    position: relative;
    cursor: pointer;

    &:after {
      $b_w: 6px;

      content: "\0020";
      position: absolute;
      top: 50%;
      right: 0;
      @include square(0);
      border: $b_w solid transparent;
      border-bottom-width: 0;
      border-top-color: #A6A6A6;
      margin: -($b_w/2) (20px/2 - $b_w) 0 0;
    }

    .DropList-label {
      @include inline-block(none);
      margin: 0 20px 0 9px;
      padding: 5px 0;
    }
  }

  .DropList-dropdown {
    z-index: 999;
    width: 100%;
    background-color: #FFF;
    border: 1px solid #A6A6A6;
    border-top-color: transparent;
    border-radius: 0 0 3px 3px;
    margin: 0 -1px;

    .DropList-list {
      @include no_item;
      max-height: (1.5 * 14px + 10px) * 10;
      padding: 0 0 0 4px;
      margin: 0 4px 4px 0;
      overflow: auto;

      li {
        @include line_feed;
        break-word: normal;
        padding: 5px;
        cursor: pointer;

        &:hover,
        &.is-selected {
          background-color: #1385E5;
          color: #FFF;
        }
      }

      &:hover li.is-selected {
        background-color: transparent;
        color: inherit;

        &:hover {
          background-color: #1385E5;
          color: #FFF;
        }
      }
    }
  }
}

.DropList--dummy {
  display: none;
}



.DropDown--upon {
  padding-top: 10px;

  &:hover .DropDown-list {
    display: block;
  }

  .DropDown-list {
    display: none;
    position: absolute;
    @include no_item;
    bottom: 100%;
    left: 50%;
    width: 6em;
    margin: 0 0 0 -3em;
    padding: 10px 0;
    text-align: center;
    background-color: #FFF;
    border: 1px solid #A6A6A6;
    border-radius: 3px;

    &:before,
    &:after {
      content: "\0020";
      position: absolute;
      top: 100%;
      left: 50%;
      @include square(0);
    }

    &:before {
      border: 0 solid transparent;
      border-width: 10px 10px 0;
      border-top-color: #A6A6A6;
      margin-left: -6px;
    }

    &:after {
      border: 0 solid transparent;
      border-width: 9px 9px 0;
      border-top-color: #FFF;
      margin-left: -5.5px;
    }
  }
}

ul.List,
ol.List {
  @include no_gap;
  @include no_item;
}

.Item {
  @include clearfix;

  .Item-user {
    float: left;
    margin-right: 15px;

    img {
      display: block;
    }
  }

  .Item-avatar {
    @include square($avatar-small);
  }

  .Item-avatar--large {
    @include square($avatar-normal);
  }

  .Item-avatar--small {
    @include square($avatar-tiny);
  }

  .Item-content {
    overflow: hidden;
  }

  .Item-name {
    @include inline-block(none);
    max-width: 6em;
    margin-top: 10px;
  }

  .Item-title,
  .Item-title--large,
  .Item-title--small {
    @include no_gap;
  }

  .Item-title {
    font-size: 1em;
  }

  .Item-title--large {
    font-size: 1.2em;
  }

  .Item-title--small,
  .Item-footer {
    font-size: .9em;
  }
}

// Scores / Levels of evaluation
// refer to: http://www.zhangxinxu.com/wordpress/2013/08/%E7%BA%AFcss%E6%98%9F%E6%98%9F%E8%AF%84%E5%88%86%E4%BA%A4%E4%BA%92-%E5%85%84%E5%BC%9F%E9%80%89%E6%8B%A9%E5%99%A8/
$score_size: 16px;

.Score,
.Score--small,
.Score--selectable {
  display: block;
  position: relative;
  background-repeat: repeat-x;

  .Score-level {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 3;
    height: 100%;
    background-repeat: repeat-x;
    @include text-hide;
  }
}

.Score,
.Score .Score-level,
.Score--selectable {
  background-image: image-url("star.png");
}

.Score,
.Score--selectable {
  width: 80px;
  height: $score_size;
  background-position: 0 (-$score_size);
}

.Score--small,
.Score--small .Score-level {
  background-image: image-url("ministar.png");
}

.Score--small {
  width: 55px;
  height: 10px;
  background-position: 0 -10px;
}

// Selectable and storage status of selected element
.Score--selectable {
  .Score-level {
    width: $score_size;
    top: auto;
    left: auto;

    &:hover {
      left: 0;
      z-index: 2;
    }
  }

  .Score-level:hover {
    background: image-url("star.png") repeat-x !important;
  }

  .Score-storage {
    position: absolute;
    clip: rect(0 0 0 0);
    display: none;
  }

  @for $i from 1 through 5 {
    $w: $i * $score_size;

    .Score-level-#{$i} {
      left: $w - $score_size;

      &:hover {
        width: $w;
      }
    }

    .Score-storage-#{$i}:checked ~ .Score-level-#{$i} {
      width: $w;
    }

    .Score-level-#{$i}.is-selected {
      width: $w;
    }
  }

  &:hover .Score-level {
    background-image: none;
  }

  label {
    display: block;
    @include square(100%);
  }
}

// !!! Can't combine with .Score-level.is-selected,
// !!! because it will can't render correctly in IE9-
.Score-storage:checked + .Score-level {
  background: image-url("star.png") repeat-x;
  left: 0;
  z-index: 1;
}

.Score-level.is-selected {
  background: image-url("star.png") repeat-x;
  left: 0;
  z-index: 1;
}

$tab-border-color: #A6A6A6;
$tab-background-color: #FFF;

.Tabs {
  .Tabs-triggers {
    overflow: hidden;
    position: relative;
    z-index: 2;
    margin-bottom: -1px;
  }

  .Tabs-trigger {
    @include inline-block(none);
    padding: .5em 1em;
    cursor: pointer;
    border: 1px solid transparent;
    border-bottom-width: 0;
    border-radius: 3px 3px 0 0;
    margin-left: 1em;
    color: $color-text-medium;

    &:hover {
      background-color: #E5E5E5;
      color: $color-text-light;
    }

    // &:first-child {
    //   margin-left: 0;
    // }

    &.is-selected {
      font-weight: bold;
      color: $color-text;
      background-color: $tab-background-color;
      border-color: $tab-border-color;
      border-bottom: 1px solid $tab-background-color;
      cursor: default;
    }
  }

  a.Tabs-trigger {
    text-decoration: none !important;
  }

  .Tabs-content {
    position: relative;
    z-index: 1;
    display: none;
    border-top: 1px solid $tab-border-color;
    background-color: $tab-background-color;
    padding: 1em;

    &.is-selected {
      display: block;
    }
  }
}

@include keyframes(progressbar_stripes) {
  from {
    background-position: 40px 0;
  }
  to {
    background-position: 0 0;
  }
}

.Uploader {
  position: relative;
  @include clearfix;
}

.Uploader-button,
.Uploader-file {
  height: 30px;
  border: 1px solid transparent;
  border-radius: 2px;
  line-height: 30px;
  // @include user-select(none);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.Uploader-button {
  position: relative;
  overflow: hidden;
  float: left;
  border-color: #CBCBCB;
  padding: 0 1em;
  margin-right: .5em;
  cursor: pointer;
  // For links
  text-decoration: none !important;
  color: #888;
  @include gradient_button(#EBEBEB, #F8F8F8, #EBEBEB, #F9F9F9, #F2F2F2);

  &[disabled] {
    border-color: #B8C4C8 !important;
    background: #D8DEE0 none !important;
    filter: none !important;
    color: #A2ABAE !important;
    cursor: default;
  }

  input[type="file"] {
    position: absolute;
    top: 0;
    right: 0;
    @include no_gap;
    @include opacity(0);
    font-size: 10em;
    cursor: pointer;
  }
}

.Uploader-file {
  overflow: hidden;
  @include text-ellipsis;
  cursor: default;

  span {
    cursor: default;
  }
}

.Uploader-overlay--fullscreen {
  position: fixed;
}

.Uploader-overlay,
.Uploader-background {
  position: absolute;
}

.Uploader-overlay,
.Uploader-overlay--fullscreen,
.Uploader-background {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.Uploader-overlay,
.Uploader-overlay--fullscreen {
  display: none;
  z-index: 999999999;
  text-align: center;
  @include text-middle;
}

.Uploader-background {
  z-index: -1;
  background-color: #000;
  @include opacity(.3);
}

.Uploader-progress,
.Uploader-bar {
  @include border-radius(2px);
}

.Uploader-progress {
  width: 80%;
  height: 20px;
  max-width: 600px;
  background: {
    color: #F7F7F7;
    repeat: repeat-x;
  }
  @include inline-block;
  @include box-shadow(inset 0 1px 2px rgba(0, 0, 0, 0.1));
}

.Uploader-bar {
  width: 0;
  height: 100%;
  background-color: #149BDF;
  @include animation(progressbar_stripes 2s linear infinite);
  @include transition(width 0.6s ease);
  @include background-size(40px 40px);
  @include background-image(linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent));
}


// UI Components
// Menu



.Menu,
.Menu-submenu {
  @include special-list;

  & > li > a {
    display: block;
  }
}

.Menu,
.Menu > li,
.Menu > li > a,
.Menu-submenu,
.Menu-submenu > li,
.Menu-submenu > li > a {
  background-color: inherit;
}

.Menu,
.Menu > li,
.Menu > li > a {
  height: 100%;
}

.Menu > li > a,
.Menu-submenu > li > a {
  padding: {
    right: 1em;
    left: 1em;
  }
}

.Menu {
  @include clearfix;
  
  & > li {
    float: left;
    overflow: hidden;
    @include dropdown-element(".Menu-submenu");

    &.state--parent {
      overflow: visible;
    }

    .Menu-submenu.state--right {
      right: 0;
      left: auto;
    }
  }

  a {
    color: inherit;
  }

  a,
  a:hover,
  a:active,
  a:visited {
    text-decoration: none;
  }
}

@include supports(box-shadow, none) {
  .Menu > li > a {
    position: relative;
    z-index: 1;
  }

  .Menu-submenu {
    @include box-shadow(0 1px 0.8em rgba(102, 102, 102, 0.7));
  }
}
